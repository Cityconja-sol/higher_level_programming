The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This is an example text file in reStructuredText format. First
``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    	>>> add_integer(2.9, 12)
	14

	>>> add_integer(105, -5)
	100

	>>> add_integer(21.9, -5.7)
	16

	>>> add_integer("17", 12)
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer(5, "ace")
	Traceback (most recent call last):
	    ...
	TypeError: b must be an integer

	>>> add_integer("x", "y")
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer(10, [2, 4, 5])
	Traceback (most recent call last):
	    ...
	TypeError: b must be an integer

	>>> add_integer(True, -5)
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer(105, False)
	Traceback (most recent call last):
	    ...
	TypeError: b must be an integer

	>>> add_integer("ace", "bay")
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer([1], [2, 3])
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer({}, 1.0)
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer

	>>> add_integer(2.5, lambda x: x)
	Traceback (most recent call last):
	    ...
	TypeError: b must be an integer
